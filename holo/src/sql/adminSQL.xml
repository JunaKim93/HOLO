<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">
	
	<!--  신고 목록 출력  -->
	
	<select id="getRptCount" resultType="int">
	<![CDATA[
		select sum(count) from(
			select count(*) as count from infoboard where report >= 5
			union
			select count(*) as count from diyboard where report >= 5
			union
			select count(*) as count from marketboard where report >= 5
			union
			select count(*) as count from communityboard where report >= 5
		)
	]]>
	</select>

	<select id="getRptList" resultType="adminDTO">
	<![CDATA[
		select articlenum, id, subject, content, regdate, category_a, report, viewcount from
			(select articlenum, id, subject, content, regdate, category_a, report, viewcount from infoboard where report >= 5
			 union
			 select articlenum, id, subject, content, regdate, category_a, report, viewcount from diyboard where report >= 5
			 union
			 select articlenum, id, subject, content, regdate, category_a, report, viewcount from marketboard where report >= 5
			 union
			 select articlenum, id, subject, content, regdate, category_a, report, viewcount from communityboard where report >= 5
			)
		order by report desc
	]]>
	</select>
	
	<select id="getRpts" resultType="adminDTO" parameterType="HashMap">
		select articlenum, id, reason from ${tablename} where articlenum=#{articlenum}
	</select>
	
	
	
	
	<!-- 신고 글 삭제 -->
	
	<delete id="delContent" parameterType="HashMap">
		delete from ${tablename} where articlenum=#{articlenum}
	</delete>
	
	
	
	
	
	<!--  신고 반려  -->
	
	<update id="updateRptCount" parameterType="HashMap">
		update ${board} set report=0 where articlenum=#{articlenum}
	</update>
	
	<delete id="cancelRpt" parameterType="HashMap">
		delete from ${tablename} where articlenum=#{articlenum}
	</delete>



	<!--  회원 정보 출력  -->
	
	<select id="getUsers" resultType="holouserDTO" parameterType="HashMap">
		select id, name, phone, email, gender, point, levels, joindate, status, authkey, r from
		(select id, name, phone, email, gender, point, levels, joindate, status, authkey, rownum r from
		(select u.id, name, phone, email, gender, point, levels, joindate, status, address as authkey from 
			holouser u left outer join useraddress a on (u.id = a.id) order by joindate desc))
		<![CDATA[where r>=#{start} and r<=#{end}]]>
	</select>

	<select id="getUserCount" resultType="int">
		select count(*) from holouser
	</select>



	<!--  포인트 선물하기 -->
	<update id="pointGift" parameterType="HashMap">
		update holouser set point = point+#{pointGift} where id = #{id}
	</update>

	
	<!-- 회원 정지/복구  -->
	<update id="deleteUser" parameterType="String">
		update holouser set status = 2, authkey= '' where id = #{id}
	</update>
	<update id="restoreIser" parameterType="String">
		update holouser set status = 1 where id = #{id}
	</update>
	


	
</mapper>